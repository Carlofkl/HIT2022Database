# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'query.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import pymysql
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem, QMessageBox

from table import *


class Query(QtWidgets.QMainWindow):
    def __init__(self):
        super(Query,self).__init__()
        self.setupUi(self)
        self.retranslateUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(230, 50, 340, 121))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")

        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(20, 50, 70, 21))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setObjectName("label")

        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(100, 50, 113, 21))
        self.lineEdit.setObjectName("lineEdit")

        self.pushButton = QtWidgets.QPushButton(self.groupBox)
        self.pushButton.setGeometry(QtCore.QRect(110, 90, 93, 28))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(9)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")

        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(230, 220, 340, 121))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")

        self.label_2 = QtWidgets.QLabel(self.groupBox_2)
        self.label_2.setGeometry(QtCore.QRect(20, 50, 100, 21))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")

        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(130, 50, 113, 21))
        self.lineEdit_2.setObjectName("lineEdit_2")

        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_2.setGeometry(QtCore.QRect(110, 90, 93, 28))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(9)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")

        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setGeometry(QtCore.QRect(230, 390, 340, 121))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")

        self.label_3 = QtWidgets.QLabel(self.groupBox_3)
        self.label_3.setGeometry(QtCore.QRect(30, 50, 71, 21))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")

        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_3.setGeometry(QtCore.QRect(100, 50, 113, 21))
        self.lineEdit_3.setObjectName("lineEdit_3")

        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_3.setGeometry(QtCore.QRect(110, 90, 93, 28))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(9)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


        self.pushButton.clicked.connect(self.query_stu)
        self.pushButton_2.clicked.connect(self.query_stu_sc)
        self.pushButton_3.clicked.connect(self.avg_score)




    def query_stu(self):
        text = self.lineEdit.text()
        if not text:
            QMessageBox.warning(self, '警告', '请输入数目')
        elif int(text)<0:
            QMessageBox.warning(self, '警告', '请输入正确的数量')
        else:
            con = pymysql.connect(host='localhost', port=3306, user='root', password='fkl001206', charset='utf8',
                                  database='lab1')  # 连接数据库
            cur = con.cursor()  # 执行sql语句的游标
            # 连接查询，体现分组，having
            query = 'select sname from student natural join grade group by grade.sid having count(*) > %s'
            cur.execute(query, [text])
            curr = cur.fetchall()
            if len(curr)>0:
                msg = '课程数目超过{num}的学生有:\n'.format(num=text)
                for item in curr:
                    msg += item[0]+'\n'
            else:
                msg = '无结果'
            QMessageBox.information(self, '学习状况', msg)
            con.close()
            cur.close()


    def query_stu_sc(self):
        c_num = self.lineEdit_2.text()

        if not c_num:
            QMessageBox.warning(self, '警告', '请输入课程号')
        elif len(c_num) != 3:
            QMessageBox.warning(self, '警告', '课程号为3位数字')
        else:
            con = pymysql.connect(host='localhost', port=3306, user='root', password='fkl001206', charset='utf8',
                                  database='lab1')  # 连接数据库
            cur = con.cursor()  # 执行sql语句的游标
            query = 'select sname from student where sid in (select sid from grade where cid = %s)' # 嵌套查询
            cur.execute(query, [c_num])
            curr = cur.fetchall()
            if len(curr) > 0:
                msg = '选修编号为{num}的学生有:\n'.format(num=c_num)
                for item in curr:
                    msg += item[0] + '\n'
            else:
                msg = '无结果'
            QMessageBox.information(self, '课程规模', msg)
            con.close()
            cur.close()


    def avg_score(self):
        name = self.lineEdit_3.text()
        if not name:
            QMessageBox.warning(self, '警告', '请输入姓名')
        else:
            con = pymysql.connect(host='localhost', port=3306, user='root', password='fkl001206', charset='utf8',
                                  database='lab1')  # 连接数据库
            cur = con.cursor()  # 执行sql语句的游标
            res=[]
            query = 'select sid, avg(score) from grade where sid in (select sid from student where sname = %s)  and score >= 60 group by sid'
            cur.execute(query, [name])
            for item in cur.fetchall():
                res.append('学号为'+str(item[0])+'的学生{name}及格科目的平均成绩为'.format(name=name) + '\t' + str(item[1]))
                print(item[0])
            QMessageBox.information(self, '平均成绩', '\n'.join(res) if len(res) != 0 else '无结果')



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "查询选课数目超过n的学生"))
        self.label.setText(_translate("MainWindow", "数目"))
        self.pushButton.setText(_translate("MainWindow", "查询"))
        self.groupBox_2.setTitle(_translate("MainWindow", "查询选修某课程的学生信息"))
        self.label_2.setText(_translate("MainWindow", "课程编号"))
        self.pushButton_2.setText(_translate("MainWindow", "查询"))
        self.groupBox_3.setTitle(_translate("MainWindow", "查询某学生及格课程平均成绩"))
        self.label_3.setText(_translate("MainWindow", "姓名"))
        self.pushButton_3.setText(_translate("MainWindow", "查询"))
